<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace tigris\core\Models\Shared;


class DescribeCollectionRequest
{
    /**
     * Optionally specify a database branch name to perform operation on
     * 
     * @var ?string $branch
     */
	#[\JMS\Serializer\Annotation\SerializedName('branch')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $branch = null;
    
    /**
     * Name of the collection.
     * 
     * @var ?string $collection
     */
	#[\JMS\Serializer\Annotation\SerializedName('collection')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $collection = null;
    
    /**
     * Collection requests modifying options.
     * 
     * @var ?\tigris\core\Models\Shared\CollectionOptions $options
     */
	#[\JMS\Serializer\Annotation\SerializedName('options')]
    #[\JMS\Serializer\Annotation\Type('tigris\core\Models\Shared\CollectionOptions')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CollectionOptions $options = null;
    
    /**
     * Project name whose db is under target to get description of its collection.
     * 
     * @var ?string $project
     */
	#[\JMS\Serializer\Annotation\SerializedName('project')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $project = null;
    
    /**
     * Return schema in the requested format. Format can be JSON, Go, TypeScript, Java. Default is JSON.
     * 
     * @var ?string $schemaFormat
     */
	#[\JMS\Serializer\Annotation\SerializedName('schema_format')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $schemaFormat = null;
    
	public function __construct()
	{
		$this->branch = null;
		$this->collection = null;
		$this->options = null;
		$this->project = null;
		$this->schemaFormat = null;
	}
}
