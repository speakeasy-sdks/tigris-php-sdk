<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace tigris\core\Models\Shared;


class ImportRequest
{
    /**
     * The list of autogenerated fields of the collection
     * 
     * @var ?array<string> $autogenerated
     */
	#[\JMS\Serializer\Annotation\SerializedName('autogenerated')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $autogenerated = null;
    
    /**
     * Optionally specify a database branch name to perform operation on
     * 
     * @var ?string $branch
     */
	#[\JMS\Serializer\Annotation\SerializedName('branch')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $branch = null;
    
    /**
     * Allow to create collection if it doesn't exists
     * 
     * @var ?bool $createCollection
     */
	#[\JMS\Serializer\Annotation\SerializedName('create_collection')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $createCollection = null;
    
    /**
     * Array of documents to import. Each document is a JSON object.
     * 
     * @var ?array<array<string, mixed>> $documents
     */
	#[\JMS\Serializer\Annotation\SerializedName('documents')]
    #[\JMS\Serializer\Annotation\Type('array<array<string, mixed>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $documents = null;
    
    /**
     * additional options for import requests.
     * 
     * @var ?\tigris\core\Models\Shared\ImportRequestOptions $options
     */
	#[\JMS\Serializer\Annotation\SerializedName('options')]
    #[\JMS\Serializer\Annotation\Type('tigris\core\Models\Shared\ImportRequestOptions')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ImportRequestOptions $options = null;
    
    /**
     * List of fields which constitutes primary key of the collection If not specified and field with name 'id' is present, it's used as a primary key, further if inferred type is UUID, then it's set as autogenerated.
     * 
     * @var ?array<string> $primaryKey
     */
	#[\JMS\Serializer\Annotation\SerializedName('primary_key')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $primaryKey = null;
    
	public function __construct()
	{
		$this->autogenerated = null;
		$this->branch = null;
		$this->createCollection = null;
		$this->documents = null;
		$this->options = null;
		$this->primaryKey = null;
	}
}
